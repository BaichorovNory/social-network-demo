{"version":3,"sources":["hoc/withAuthRedirect.js","components/FormsControls/FormControls.module.css","components/FormsControls/FormsControls.js","validators/validators.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogsItem/DialogsItem.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogsItem/DialogsItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["withAuthRedirect","Component","this","props","isAuth","to","React","module","exports","Textarea","input","meta","hasError","touched","error","className","style","formControl","Input","requiredField","value","maxLengthCreator","maxLength","length","Message","message","DialogsItem","path","id","dialog","active","name","maxLenght150","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","validate","placeholder","buttonline","button","Dialogs","state","dialogsPage","dialogElements","dialogs","map","messagesElements","messages","dialogItems","values","onSendMessageClick","newMessageBody","compose","connect","auth","dispatch","sendMessageActionCreator"],"mappings":"mNAGaA,EAAmB,SAACC,GAQ7B,OAR2C,4JAGvC,WACI,OAAKC,KAAKC,MAAMC,OACT,cAACH,EAAD,eAAeC,KAAKC,QADI,cAAC,IAAD,CAAUE,GAAG,eAJT,GAEXC,IAAML,a,oBCJ1CM,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,4BAA4B,aAAe,qC,yJCExGC,EAAW,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAASR,EAAY,gCAC7CS,EAAWD,EAAKE,SAAWF,EAAKG,MAEtC,OACI,sBAAKC,UAAWC,IAAMC,YAAc,KAAOL,EAAWI,IAAMF,MAAQ,IAApE,UACI,8BACI,oDAAcJ,GAAWP,MAE3BS,GAAY,+BAAOD,EAAKG,YAKzBI,EAAQ,SAAC,GAA+B,IAA7BR,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAASR,EAAY,gCAC1CS,EAAWD,EAAKE,SAAWF,EAAKG,MAEtC,OACI,sBAAKC,UAAWC,IAAMC,YAAc,KAAOL,EAAWI,IAAMF,MAAQ,IAApE,UACI,8BACI,iDAAWJ,GAAWP,MAExBS,GAAY,+BAAOD,EAAKG,a,iCCxBtC,oEAAO,IAAMK,EAAgB,SAAAC,GACzB,IAAIA,EACJ,MAAO,sGAGEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAIA,GAASA,EAAMG,OAASD,EAAW,MAAM,2GAAN,OAA6BA,EAA7B,iE,0CCL3Cf,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,SAAW,0BAA0B,WAAa,4BAA4B,OAAS,0B,oBCAxND,EAAOC,QAAU,CAAC,OAAS,8B,0ECOZgB,EALC,SAACrB,GACb,OACI,qBAAKY,UAAWC,IAAMS,QAAtB,SAAgCtB,EAAMsB,W,8DCO/BC,EARK,SAACvB,GACjB,IAAIwB,EAAO,WAAaxB,EAAMyB,GAC9B,OACI,qBAAKb,UAAWC,IAAMa,OAAS,IAAMb,IAAMc,OAA3C,SACI,cAAC,IAAD,CAASzB,GAAIsB,EAAb,SAAoBxB,EAAM4B,U,kBCwBhCC,EAAeX,YAAiB,KAchCY,EAAsBC,YAAU,CAAEC,KAAM,yBAAlBD,EAbL,SAAC/B,GACpB,OACI,uBAAMiC,SAAUjC,EAAMkC,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAW9B,IAAU+B,SAAUR,EAAcS,YAAa,oGAAqBV,KAAM,qBAEhG,qBAAKhB,UAAWC,IAAM0B,WAAtB,SACI,wBAAQ3B,UAAWC,IAAM2B,OAAzB,4EAQDC,EAxCC,SAACzC,GAEb,IAAI0C,EAAQ1C,EAAM2C,YACdC,EAAiBF,EAAMG,QAAQC,KAAI,SAAApB,GAAM,OAAI,cAAC,EAAD,CAAYE,KAAMF,EAAOE,KAAMH,GAAIC,EAAOD,QACvFsB,EAAmBL,EAAMM,SAASF,KAAI,SAAAxB,GAAO,OAAI,cAAC,EAAD,CAASA,QAASA,EAAQA,aAM/E,OACI,sBAAKV,UAAWC,IAAMgC,QAAtB,UACI,qBAAKjC,UAAWC,IAAMoC,YAAtB,SACKL,IAEL,qBAAKhC,UAAWC,IAAMmC,SAAtB,SACI,8BAAMD,MAEV,8BACI,cAACjB,EAAD,CAAqBG,SAbb,SAACiB,GACjBlD,EAAMmD,mBAAmBD,EAAOE,yB,iCCMzBC,sBAAQC,aAfD,SAACZ,GACnB,MAAO,CACHC,YAAaD,EAAMC,YACnB1C,OAAQyC,EAAMa,KAAKtD,WAIF,SAACuD,GACtB,MAAO,CACHL,mBAAoB,SAACC,GACjBI,EAASC,YAAyBL,SAM1CvD,IADWwD,CACOZ","file":"static/js/5.0542368c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    return RedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__P_EJZ\",\"error\":\"FormControls_error__1D48X\",\"formAnyError\":\"FormControls_formAnyError__3-0vq\"};","import React from 'react';\r\nimport style from './FormControls.module.css'\r\n\r\nexport const Textarea = ({ input, meta, ...props }) => {\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={style.formControl + ' ' + (hasError ? style.error : '')}>\r\n            <div>\r\n                <textarea {...input} {...props} />\r\n            </div>\r\n            { hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({ input, meta, ...props }) => {\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={style.formControl + ' ' + (hasError ? style.error : '')}>\r\n            <div>\r\n                <input {...input} {...props} />\r\n            </div>\r\n            { hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}","export const requiredField = value => {\r\n    if (value) return undefined;\r\n    return 'Обязательное поле!';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) return `Максимальная длина ${maxLength} символа(ов)!`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1czox\",\"dialogItems\":\"Dialogs_dialogItems__1mTBo\",\"dialog\":\"Dialogs_dialog__2Y09b\",\"messages\":\"Dialogs_messages__38JMi\",\"buttonline\":\"Dialogs_buttonline__2AgwY\",\"button\":\"Dialogs_button__1H6Bi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogsItem_dialog__1Elps\"};","import React from 'react';\r\nimport style from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={style.message}>{props.message}</div>\r\n    );\r\n}\r\nexport default Message;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport style from './DialogsItem.module.css';\r\n\r\nconst DialogsItem = (props) => {\r\n    let path = '/dialog/' + props.id;\r\n    return (\r\n        <div className={style.dialog + ' ' + style.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\nexport default DialogsItem;","import React from 'react';\r\nimport Message from './Message/Message';\r\nimport style from './Dialogs.module.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport DialogItem from './DialogsItem/DialogsItem';\r\nimport { Textarea } from '../FormsControls/FormsControls'\r\nimport { maxLengthCreator } from '../../validators/validators';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n    let dialogElements = state.dialogs.map(dialog => <DialogItem name={dialog.name} id={dialog.id} />);\r\n    let messagesElements = state.messages.map(message => <Message message={message.message} />);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.onSendMessageClick(values.newMessageBody)\r\n    }\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogItems}>\r\n                {dialogElements}\r\n            </div>\r\n            <div className={style.messages}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n            <div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nconst maxLenght150 = maxLengthCreator(150)\r\nconst addMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} validate={maxLenght150} placeholder={'Введите сообщение'} name={'newMessageBody'} />\r\n            </div>\r\n            <div className={style.buttonline}>\r\n                <button className={style.button}>Отправить</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: 'dialogsAddMessageForm' })(addMessageForm)\r\n\r\nexport default Dialogs;","import Dialogs from './Dialogs';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\r\nimport { sendMessageActionCreator } from '../../Store/dialogsPageReducer';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        isAuth: state.auth.isAuth\r\n    };\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSendMessageClick: (newMessageBody) => {\r\n            dispatch(sendMessageActionCreator(newMessageBody));\r\n        }\r\n    };\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect)(Dialogs)"],"sourceRoot":""}