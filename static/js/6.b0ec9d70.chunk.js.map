{"version":3,"sources":["components/Login/Login.module.css","components/Login/Login.jsx"],"names":["module","exports","maxLength50","maxLengthCreator","ReduxLoginForm","reduxForm","form","props","onSubmit","handleSubmit","className","styles","placeholder","name","component","Input","validate","requiredField","type","error","style","formAnyError","button","connect","state","isAuth","auth","login","logout","to","formData","email","password","rememberMe"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,OAAS,wB,iCCD3B,oHAUMC,EAAcC,YAAiB,IAoB/BC,EAAiBC,YAAU,CAAEC,KAAM,SAAlBD,EAlBL,SAACE,GACf,OACI,uBAAMC,SAAUD,EAAME,aAAcC,UAAWC,IAA/C,UACI,uCACA,8BACI,cAAC,IAAD,CAAOC,YAAY,mDAAgBC,KAAM,QAASC,UAAWC,IAAOC,SAAU,CAACC,IAAef,OAElG,8BACI,cAAC,IAAD,CAAOU,YAAY,kFAAiBC,KAAM,WAAYK,KAAM,WAAYJ,UAAWC,IAAOC,SAAU,CAACC,IAAef,OAEvHK,EAAMY,OAAS,qBAAKT,UAAWU,IAAMC,aAAtB,SAAqCd,EAAMY,QAC3D,8BACI,wBAAQT,UAAWC,IAAOW,OAA1B,oDAoBDC,uBAHS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,UAEiB,CAAEE,UAAOC,YAAlCL,EAZD,SAAChB,GAKX,OAAIA,EAAMkB,OAAe,cAAC,IAAD,CAAUI,GAAI,aAEhC,cAACzB,EAAD,CAAgBI,SANN,SAACsB,GACdvB,EAAMoB,MAAMG,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/6.b0ec9d70.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Login_button__1NZAc\"};","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Input } from '../FormsControls/FormsControls';\r\nimport { login, logout } from '../../Store/authReducer';\r\nimport style from '../FormsControls/FormControls.module.css';\r\nimport styles from './Login.module.css'\r\nimport { requiredField, maxLengthCreator } from '../../validators/validators'\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={styles}>\r\n            <h1>LOGIN</h1>\r\n            <div>\r\n                <Field placeholder='Введите email' name={'email'} component={Input} validate={[requiredField, maxLength50]} />\r\n            </div>\r\n            <div>\r\n                <Field placeholder='Введите пароль' name={'password'} type={'password'} component={Input} validate={[requiredField, maxLength50]} />\r\n            </div>\r\n            {props.error && <div className={style.formAnyError}>{props.error}</div>}\r\n            <div>\r\n                <button className={styles.button}>Войти</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ReduxLoginForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) return <Redirect to={'/profile'} />\r\n\r\n    return <ReduxLoginForm onSubmit={onSubmit} />\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, { login, logout })(Login);"],"sourceRoot":""}