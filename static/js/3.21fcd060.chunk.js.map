{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogsItem/DialogsItem.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogsItem/DialogsItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Message","props","className","style","message","DialogsItem","path","id","dialog","active","to","name","maxLenght150","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","placeholder","buttonline","button","Dialogs","state","dialogsPage","dialogElements","dialogs","map","messagesElements","messages","dialogItems","values","onSendMessageClick","newMessageBody","compose","connect","isAuth","auth","dispatch","sendMessageActionCreator","withAuthRedirect"],"mappings":"iHACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,SAAW,0BAA0B,WAAa,4BAA4B,OAAS,0B,oBCAxND,EAAOC,QAAU,CAAC,OAAS,8B,0ECOZC,EALC,SAACC,GACb,OACI,qBAAKC,UAAWC,IAAMC,QAAtB,SAAgCH,EAAMG,W,8DCO/BC,EARK,SAACJ,GACjB,IAAIK,EAAO,WAAaL,EAAMM,GAC9B,OACI,qBAAKL,UAAWC,IAAMK,OAAS,IAAML,IAAMM,OAA3C,SACI,cAAC,IAAD,CAASC,GAAIJ,EAAb,SAAoBL,EAAMU,U,gBCwBhCC,EAAeC,YAAiB,KAchCC,EAAsBC,YAAU,CAAEC,KAAM,yBAAlBD,EAbL,SAACd,GACpB,OACI,uBAAMgB,SAAUhB,EAAMiB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAUV,EAAcW,YAAa,oGAAqBZ,KAAM,qBAEhG,qBAAKT,UAAWC,IAAMqB,WAAtB,SACI,wBAAQtB,UAAWC,IAAMsB,OAAzB,4EAQDC,EAxCC,SAACzB,GAEb,IAAI0B,EAAQ1B,EAAM2B,YACdC,EAAiBF,EAAMG,QAAQC,KAAI,SAAAvB,GAAM,OAAI,cAAC,EAAD,CAAYG,KAAMH,EAAOG,KAAMJ,GAAIC,EAAOD,QACvFyB,EAAmBL,EAAMM,SAASF,KAAI,SAAA3B,GAAO,OAAI,cAAC,EAAD,CAASA,QAASA,EAAQA,aAM/E,OACI,sBAAKF,UAAWC,IAAM2B,QAAtB,UACI,qBAAK5B,UAAWC,IAAM+B,YAAtB,SACKL,IAEL,qBAAK3B,UAAWC,IAAM8B,SAAtB,SACI,8BAAMD,MAEV,8BACI,cAAClB,EAAD,CAAqBG,SAbb,SAACkB,GACjBlC,EAAMmC,mBAAmBD,EAAOE,yB,iCCMzBC,sBAAQC,aAfD,SAACZ,GACnB,MAAO,CACHC,YAAaD,EAAMC,YACnBY,OAAQb,EAAMc,KAAKD,WAIF,SAACE,GACtB,MAAO,CACHN,mBAAoB,SAACC,GACjBK,EAASC,YAAyBN,SAM1CO,IADWN,CACOZ","file":"static/js/3.21fcd060.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1czox\",\"dialogItems\":\"Dialogs_dialogItems__1mTBo\",\"dialog\":\"Dialogs_dialog__2Y09b\",\"messages\":\"Dialogs_messages__38JMi\",\"buttonline\":\"Dialogs_buttonline__2AgwY\",\"button\":\"Dialogs_button__1H6Bi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogsItem_dialog__1Elps\"};","import React from 'react';\r\nimport style from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={style.message}>{props.message}</div>\r\n    );\r\n}\r\nexport default Message;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport style from './DialogsItem.module.css';\r\n\r\nconst DialogsItem = (props) => {\r\n    let path = '/dialog/' + props.id;\r\n    return (\r\n        <div className={style.dialog + ' ' + style.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\nexport default DialogsItem;","import React from 'react';\r\nimport Message from './Message/Message';\r\nimport style from './Dialogs.module.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport DialogItem from './DialogsItem/DialogsItem';\r\nimport { Textarea } from '../FormsControls/FormsControls'\r\nimport { maxLengthCreator } from '../../validators/validators';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n    let dialogElements = state.dialogs.map(dialog => <DialogItem name={dialog.name} id={dialog.id} />);\r\n    let messagesElements = state.messages.map(message => <Message message={message.message} />);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.onSendMessageClick(values.newMessageBody)\r\n    }\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogItems}>\r\n                {dialogElements}\r\n            </div>\r\n            <div className={style.messages}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n            <div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nconst maxLenght150 = maxLengthCreator(150)\r\nconst addMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} validate={maxLenght150} placeholder={'Введите сообщение'} name={'newMessageBody'} />\r\n            </div>\r\n            <div className={style.buttonline}>\r\n                <button className={style.button}>Отправить</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: 'dialogsAddMessageForm' })(addMessageForm)\r\n\r\nexport default Dialogs;","import Dialogs from './Dialogs';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\r\nimport { sendMessageActionCreator } from '../../Store/dialogsPageReducer';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        isAuth: state.auth.isAuth\r\n    };\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSendMessageClick: (newMessageBody) => {\r\n            dispatch(sendMessageActionCreator(newMessageBody));\r\n        }\r\n    };\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect)(Dialogs)"],"sourceRoot":""}