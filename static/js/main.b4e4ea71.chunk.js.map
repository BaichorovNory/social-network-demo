{"version":3,"sources":["api/api.js","components/Users/ZKZx.gif","components/Preloader/Preloader.jsx","components/Navbar/Navbar.jsx","Store/appReducer.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","App.js","Store/reduxStore.js","reportWebVitals.js","index.js","Store/authReducer.js","components/Preloader/Preloader.module.css","components/Header/Header.module.css","Store/profilePageReducer.js","Store/usersPageReducer.js","Store/dialogsPageReducer.js","components/Navbar/Navbar.module.css"],"names":["instance","axios","baseURL","withCredentials","headers","usersListAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","profileAPI","getProfile","getStatus","updateStatus","status","put","uploadPhoto","photos","formData","FormData","append","authMeAPI","me","login","email","password","rememberMe","logout","Preloader","className","style","text","src","gif","alt","img","Navbar","nav","item","to","activeClassName","activeLink","INITIALIZED_SUCCESS","initialState","initialized","initializedSuccess","type","appReducer","state","action","Header","props","header","loginBlock","isAuth","onClick","HeaderContainer","this","React","Component","connect","auth","News","lazy","Login","Music","Settings","UsersContainer","ProfileContainer","DialogsContainer","App","initializeApp","path","render","fallback","compose","app","dispatch","promise","authThunkCreator","Promise","all","withRouter","reducers","combineReducers","profilePage","profilePageReducer","dialogsPage","dialogsPageReducer","usersPage","usersPageReducer","authReducer","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById","SET_USERS_DATA","id","a","resultCode","setAuthUsersData","message","messages","length","stopSubmit","payload","module","exports","ADD_POST","SET_STATUS","UPLOAD_PHOTO","SET_USER_PROFILE","posts","likes","profile","setUserStatus","addPostActionCreator","newPostBody","getUserProfile","file","stateCopy","push","SET_USERS","FOLLOW","UNFOLLOW","SET_CURRENT_PAGE","TOGGLE_IS_FETCHING","SET_USERS_TOTAL_COUNT","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","getUsersThunkCreator","setCurrentPage","toggleIsFetching","setUsers","items","setUsersTotalCount","totalCount","toggleFollowingProgress","followSuccess","unfollowSuccess","map","u","followed","filter","SEND_MESSAGE","dialogs","name","sendMessageActionCreator","newMessageBody","enteredMessageText","userName"],"mappings":"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","file":"static/js/main.b4e4ea71.chunk.js","sourcesContent":["import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: { 'API-KEY': 'df8f2239-0b7c-4065-ad2f-ebb355ed1016' }\r\n})\r\n\r\nexport const usersListAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status: status })\r\n    },\r\n    uploadPhoto(photos) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photos)\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    }\r\n};\r\n\r\nexport const authMeAPI = {\r\n    me() {\r\n        return instance.get('auth/me')\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post('auth/login', { email, password, rememberMe })\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login')\r\n    }\r\n};","export default __webpack_public_path__ + \"static/media/ZKZx.4ace5f17.gif\";","import React from 'react';\r\nimport gif from '../Users/ZKZx.gif';\r\nimport style from './Preloader.module.css'\r\n\r\nconst Preloader = () => {\r\n    return <div className={style.text}>Загрузка, пожалуйста подождите...<img src={gif} alt='' className={style.img} /></div>;\r\n};\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport style from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className={style.nav}>\r\n      <div className={style.item}>\r\n        <NavLink to='/profile' activeClassName={style.activeLink}>Главная</NavLink>\r\n      </div>\r\n      <div className={style.item}>\r\n        <NavLink to='/messages' activeClassName={style.activeLink}>Сообщения</NavLink>\r\n      </div>\r\n      <div className={style.item}>\r\n        <NavLink to='/news' activeClassName={style.activeLink}>Новости</NavLink>\r\n      </div>\r\n      <div className={style.item}>\r\n        <NavLink to='/music' activeClassName={style.activeLink}>Музыка</NavLink>\r\n      </div>\r\n      <div className={style.item}>\r\n        <NavLink to='/users' activeClassName={style.activeLink}>Пользователи</NavLink>\r\n      </div>\r\n      <div className={style.item}>\r\n        <NavLink to='/settings' activeClassName={style.activeLink}>Настройки</NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nexport default Navbar;","import { authThunkCreator } from './authReducer'\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    };\r\n}\r\n\r\nexport const initializeApp = () => {\r\n    return (dispatch) => {\r\n        let promise = dispatch(authThunkCreator())\r\n        Promise.all([promise]).then(() => {\r\n            dispatch(initializedSuccess())\r\n        })\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS });\r\nexport default appReducer;","import React from 'react';\r\nimport style from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={style.header}>\r\n      <div className={style.loginBlock}>\r\n        {props.isAuth\r\n          ? <div>{props.login} <button onClick={props.logout}>Выйти</button></div>\r\n          : <NavLink to={'/login'}>Войти</NavLink>}\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\nexport default Header;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../Store/authReducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);","import './App.css';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport React, { Suspense } from 'react';\nimport Navbar from './components/Navbar/Navbar';\nimport { initializeApp } from './Store/appReducer';\nimport { Route, withRouter } from 'react-router-dom';\nimport Preloader from './components/Preloader/Preloader';\nimport HeaderContainer from './components/Header/HeaderContainer';\nconst News = React.lazy(() => import('./components/News/News'));\nconst Login = React.lazy(() => import('./components/Login/Login'));\nconst Music = React.lazy(() => import('./components/Music/Music'));\nconst Settings = React.lazy(() => import('./components/Settin/Settings'));\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n\n  render() {\n    if (!this.props.initialized) return <Preloader />\n    return (\n      <div className='app-wrapper'>\n        <HeaderContainer />\n        <Navbar />\n        <div className='app-wrapper-content'>\n          <Route path='/login' render={() => { return <Suspense fallback={<Preloader />}><Login /></Suspense> }} />\n          <Route path='/news' render={() => { return <Suspense fallback={<Preloader />}> <News /> </Suspense> }} />\n          <Route path='/music' render={() => { return <Suspense fallback={<Preloader />}> <Music /> </Suspense> }} />\n          <Route path='/settings' render={() => { return <Suspense fallback={<Preloader />}> <Settings /> </Suspense> }} />\n          <Route path='/users' render={() => { return <Suspense fallback={<Preloader />}> <UsersContainer /> </Suspense> }} />\n          <Route path='/messages' render={() => { return <Suspense fallback={<Preloader />}> <DialogsContainer /> </Suspense> }} />\n          <Route path='/profile/:id?' render={() => { return <Suspense fallback={<Preloader />}><ProfileContainer /> </Suspense> }} />\n        </div>\n      </div>\n    )\n  };\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n})\nexport default compose(connect(mapStateToProps, { initializeApp }), withRouter)(App);","import { combineReducers, createStore, applyMiddleware, compose } from 'redux';\r\nimport dialogsPageReducer from './dialogsPageReducer';\r\nimport profilePageReducer from './profilePageReducer';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport usersPageReducer from './usersPageReducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport authReducer from './authReducer';\r\nimport appReducer from './appReducer'\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profilePageReducer,\r\n    dialogsPage: dialogsPageReducer,\r\n    usersPage: usersPageReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nwindow.store = store;\r\n\r\nexport default store;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css';\nimport App from './App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './Store/reduxStore';\nimport { Provider } from 'react-redux';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","import { stopSubmit } from 'redux-form';\r\nimport { authMeAPI } from '../api/api'\r\nconst SET_USERS_DATA = 'SET_USERS_DATA';\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_USERS_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    };\r\n}\r\n\r\nexport const authThunkCreator = () => {\r\n    return async (dispatch) => {\r\n        let response = await authMeAPI.me()\r\n        if (response.data.resultCode === 0) {\r\n            let { id, email, login } = response.data.data;\r\n            dispatch(setAuthUsersData(id, email, login, true));\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => {\r\n    return async (dispatch) => {\r\n        let response = await authMeAPI.login(email, password, rememberMe)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(authThunkCreator())\r\n        } else {\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Возникли технические неполадки!'\r\n            dispatch(stopSubmit('login', { email: message }))\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return async (dispatch) => {\r\n        let response = await authMeAPI.logout()\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUsersData(null, null, null, false))\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const setAuthUsersData = (id, email, login, isAuth) => ({ type: SET_USERS_DATA, payload: { id, email, login, isAuth } });\r\nexport default authReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Preloader_img__bnwNy\",\"text\":\"Preloader_text__3okug\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2Orl1\",\"loginBlock\":\"Header_loginBlock__3D-Qh\"};","import { profileAPI } from '../api/api'\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst UPLOAD_PHOTO = 'UPLOAD_PHOTO';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, text: 'Первый пост', likes: 10 },\r\n        { id: 2, text: 'Второй пост', likes: 12 },\r\n        { id: 3, text: 'Третий пост', likes: 100 },\r\n        { id: 4, text: 'Четвертый пост', likes: 777 }\r\n    ],\r\n    profile: null\r\n};\r\n\r\nconst profilePageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let stateCopy = { ...state, posts: [...state.posts] };\r\n            stateCopy.posts.push({ id: 5, text: action.newPostBody, likes: 0 });\r\n            return stateCopy;\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return { ...state, profile: action.profile }\r\n        }\r\n        case SET_STATUS: {\r\n            return { ...state, status: action.status }\r\n        }\r\n        case UPLOAD_PHOTO: {\r\n            return { ...state, profile: { ...state.profile, photos: action.photos } }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile });\r\nexport const setUserStatus = (status) => ({ type: SET_STATUS, status });\r\nexport const uploadPhotoSuccess = (photos) => ({ type: UPLOAD_PHOTO, photos });\r\nexport const addPostActionCreator = (newPostBody) => ({ type: ADD_POST, newPostBody });\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getProfile(userId)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setUserProfile(response.data));\r\n    }\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setUserStatus(response.data))\r\n}\r\n\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setUserStatus(status))\r\n    }\r\n}\r\n\r\nexport const uploadPhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.uploadPhoto(file)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(uploadPhotoSuccess(response.data.data.photos))\r\n    }\r\n}\r\n\r\nexport default profilePageReducer;","import { usersListAPI } from \"../api/api\";\r\n\r\nconst SET_USERS = 'SET_USERS';\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst SET_USERS_TOTAL_COUNT = 'SET_USERS_TOTAL_COUNT';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersPageReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case FOLLOW:\r\n            return {\r\n                ...state, users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: true }\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state, users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: false }\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n\r\n        case SET_USERS:\r\n            return { ...state, users: action.users };\r\n        case SET_CURRENT_PAGE:\r\n            return { ...state, currentPage: action.currentPage };\r\n        case SET_USERS_TOTAL_COUNT:\r\n            return { ...state, totalUsersCount: action.totalCount };\r\n        case TOGGLE_IS_FETCHING:\r\n            return { ...state, isFetching: action.isFetching };\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state, followingInProgress: action.userId\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    };\r\n}\r\n\r\nexport const getUsersThunkCreator = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(setCurrentPage(currentPage));\r\n        dispatch(toggleIsFetching(true));\r\n        let data = await usersListAPI.getUsers(currentPage, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setUsersTotalCount(data.totalCount));\r\n    }\r\n};\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        let response = await usersListAPI.follow(userId);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(followSuccess(userId));\r\n        }\r\n        dispatch(toggleFollowingProgress(false, userId))\r\n    }\r\n};\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        let response = await usersListAPI.unfollow(userId);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(unfollowSuccess(userId));\r\n        }\r\n        dispatch(toggleFollowingProgress(false, userId))\r\n    }\r\n};\r\n\r\nexport const setUsers = (users) => ({ type: SET_USERS, users });\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId });\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId });\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage });\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\nexport const setUsersTotalCount = (totalCount) => ({ type: SET_USERS_TOTAL_COUNT, totalCount });\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId });\r\nexport default usersPageReducer;","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        { id: 1, name: 'Иван' },\r\n        { id: 2, name: 'Дмитрий' },\r\n        { id: 3, name: 'Петр' },\r\n        { id: 4, name: 'Андрей' }\r\n    ],\r\n    messages: [\r\n        { id: 1, message: 'Привет' },\r\n        { id: 2, message: 'Здаров' },\r\n        { id: 3, message: 'Окей' },\r\n        { id: 4, message: 'Спасибо' }\r\n    ],\r\n};\r\n\r\nconst dialogsPageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            let stateCopy = { ...state, messages: [...state.messages], dialogs: [...state.dialogs] };\r\n            let enteredMessageText = action.newMessageBody;\r\n            let userName = 'Без имени'\r\n            stateCopy.messages.push({ id: 5, message: enteredMessageText });\r\n            stateCopy.dialogs.push({id: 5, name:userName})\r\n            return stateCopy;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageActionCreator = (newMessageBody) => {\r\n    return { type: SEND_MESSAGE, newMessageBody };\r\n}\r\n\r\nexport default dialogsPageReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1wu3z\",\"item\":\"Navbar_item__LgpA0\",\"activeLink\":\"Navbar_activeLink__2D2rt\"};"],"sourceRoot":""}